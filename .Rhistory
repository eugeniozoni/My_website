install.packages("blogdown")
blogdown::install_hugo(version = "0.63.1", force = TRUE)
blogdown:::serve_site()
library(blogdown)
library(blogdown)
blogdown::serve_site()
library(blogdown)
blogdown::serve_site()
blogdown::serve_site()
blogdown::install_hugo(force = TRUE)
blogdown::install_hugo(force = TRUE)
blogdown::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(blogdown)
blogdown:::serve_site()
library(blogdown)
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
library(blogdown)
blogdown::build_site()
blogdown::serve_site()
library(blogdown)
blogdown::build_site()
blogdown::serve_site()
library(blogdown)
blogdown::build_site()
blogdown::serve_site()
library(blogdown)
blogdown::build_site()
blogdown::serve_site()
getwd()
library(blogdown)
blogdown:::serve_site()
library(blogdown)
blogdown:::serve_site()
library(blogdown)
blogdown:::serve_site()
library(blogdown)
blogdown:::serve_site()
blogdown:::serve_site()
library(blogdown)
blogdown:::serve_site()
library(blogdown)
blogdown:::serve_site()
library(blogdown)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(bibliometrix)
library(bibliometrix)
D <- convert2df("D:\Documents\GitHub\wordcloud\savedrecs.bib", dbsource = 'wos', format = "bibtex")
D <- convert2df("D:/Documents/GitHub/wordcloud/savedrecs.bib", dbsource = 'wos', format = "bibtex")
View(D)
write.table(c(keywords), "D:Documents/GitHub/wordcloud/EZ_keywords_WOS.txt", row.names = FALSE)
keywords<-D$ID
write.table(c(keywords), "D:Documents/GitHub/wordcloud/EZ_keywords_WOS.txt", row.names = FALSE)
setwd("~/GitHub/wordcloud")
write.table(c(keywords), "EZ_keywords_WOS.txt", row.names = FALSE)
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
keyword_text <- readLines("EZ_keywords_WOS.txt")
docs <- Corpus(VectorSource(keyword_text))
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, removeWords, stopwords("english"))
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("and"))
docs <- Corpus(VectorSource(keyword_text))
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
barplot(d[1:20,]$freq, las = 2, names.arg = d[1:20,]$word,
col ="lightblue", main ="20 Most frequent keywords",
ylab = "Word frequencies")
set.seed(1234)
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
docs <- Corpus(VectorSource(keyword_text))
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, removeWords, stopwords("english"))
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("and"))
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
set.seed(1234)
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("and", "expression"))
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("expression"))
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("Expression"))
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords("Expression"))
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, "Expression")
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, "expression")
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("expression", "cells")
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("expression", "cells")
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("expression")
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("expression", "cells"))
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("expression", "cells"))
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("EXPRESSION", "cells"))
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("EXPRESSION"))
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
set.seed(1234)
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=50, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
par(oma=c(3,3,3,3))
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
par(oma=c(1,1,1,1))
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
par(oma=c(0.5,0.5,0.5,0.5))
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
par(oma=c(0.1,0.1,0.1,0.))
par(oma=c(0.1,0.1,0.1,0.1))
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
par(mar=c(0,0,0,0))
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
setwd("~/GitHub/My_website")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
set.seed(1234)
par(oma=c(0.1,0.1,0.1,0.1))
par(mar=c(0,0,0,0))
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
set.seed(1234)
par(oma=c(0.1,0.1,0.1,0.1))
par(mar=c(0,0,0,0))
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
jpg("wordcloud.jpg",width=7,height=7,units="in",res=300)
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
dev.off()
setwd("~/GitHub/wordcloud")
jpeg("wordcloud.jpg",width=7,height=7,units="in",res=300)
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
dev.off()
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
dev.off()
setwd("~/GitHub/My_website")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
setwd("~/GitHub/wordcloud")
rotate.image("wordcloud.jpg", angle = 90, compress=NULL)
jpeg("wordcloud.jpg",width=7,height=7,units="in",res=150)
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"))
dev.off()
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
jpeg("wordcloud.jpg",width=7,height=7,units="in",res=150)
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"))
dev.off()
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 2,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"))
dev.off()
worcloud<-wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"))
dev.off()
setwd("~/GitHub/My_website")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("seoR")
install.packages("seoR")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(installr)
updateR()
install.packages("blogdown")
install.packages("shiny")
install.packages("miniUI")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
